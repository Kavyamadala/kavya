/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* mergeTwoLists(struct ListNode* list1, struct ListNode* list2){
struct ListNode * first;
    struct ListNode * head;
    if(list1==NULL && list2!=NULL)
        return list2;
    else if(list1!=NULL && list2==NULL)
        return list1;
    else if(list1==NULL && list2==NULL)
        return NULL;
    if(list1->val < list2->val){
        first=list1;
        list1=list1->next;
        first->next=NULL;
    }
    else
    {
        first=list2;
        list2=list2->next;
        first->next=NULL;
    }
    head=first;
    while(list1||list2)
    {
        if(list1==NULL && list2!=NULL){
            first->next = list2;
            list2 = list2->next;
            first = first->next;
            first->next = NULL;
            continue;
        }
        else if(list1!=NULL && list2==NULL){
            first->next=list1;
            list1=list1->next;
            first=first->next;
            first->next=NULL;
            continue;
           
        }
         if(list1->val < list2->val){
            first->next = list1;
            list1 = list1->next;
            first = first->next;
            first->next = NULL;
        }
        else{
           first->next =list2;
           list2=list2->next;
           first=first->next;
           first->next=NULL;
           
    }
    }
   
    return head;
} 

